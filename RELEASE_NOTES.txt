WORKSPACE SERVICE OVERVIEW
-----------------------------------------
The Workspace Service (WSS) is primarily a language independent remote storage
and retrieval system for KBase typed objects (TO) defined with the KBase
Interface Description Language (KIDL). It has the following primary features:
- Immutable storage of TOs with
	- user defined metadata 
	- data provenance
- Versioning of TOs
- Referencing from TO to TO
- Typechecking of all saved objects against a KIDL specification
- Collecting typed objects into a workspace
- Sharing workspaces with specific KBase users or the world
- Freezing and publishing workspaces
- Serverside extraction of portions of an object

Size limits:
TOs are limited to 1GB
TO subdata is limited to 15MB
TO provenance is limited to 1MB

VERSION: 0.3.3 (Released 10/28/14)
--------------------------------------
NEW FEATURES:
- Object references and types are now logged for many methods.

UPDATED FEATURES / MAJOR BUG FIXES:
- N/A

KNOWN BUGS:
- When filtering list_object output, deleted, hidden and early versions of
  objects are filtered *after* the limit is applied. This means that fewer
  objects than the limit may be returned, and in extreme cases where many
  hidden, deleted, or lower version objects are found no objects may be
  returned.
  
ANTICIPATED FUTURE DEVELOPMENTS:
- Garbage collection
- ACLs based on KBase groups
- KBase Search API
- Improvements to returning the subset of an object

VERSION: 0.3.2 (Released 10/20/14)
--------------------------------------
NEW FEATURES:
- N/A

UPDATED FEATURES / MAJOR BUG FIXES:
- The ProvenanceAction data structure now has fields for entering external
  data sources.
- The workspace client now has streaming mode off by default. To turn it back
  on, do setStreamingModeOn(true).
- Fixed a bug that would cause calls to the handle service or handle manager
  to fail every other call if they were not behind nginx and the call 
  frequency was between 1-4s.

KNOWN BUGS:
- When filtering list_object output, deleted, hidden and early versions of
  objects are filtered *after* the limit is applied. This means that fewer
  objects than the limit may be returned, and in extreme cases where many
  hidden, deleted, or lower version objects are found no objects may be
  returned.
  
ANTICIPATED FUTURE DEVELOPMENTS:
- Garbage collection
- ACLs based on KBase groups
- KBase Search API
- Improvements to returning the subset of an object

VERSION: 0.3.1 (Released 10/1/2014)
--------------------------------------
NEW FEATURES:
- N/A

UPDATED FEATURES / MAJOR BUG FIXES:
- Fixed a bug where adding an @id annotation to the key of a mapping would
  result in a minor version increment vs. the expected major version increment.
- Fixed a bug where a bad workspace @id (unparsable, deleted object, etc) with
  allowed types specified in the typespec would cause a NPE rather than a
  useful typechecking error.

KNOWN BUGS:
- When filtering list_object output, deleted, hidden and early versions of
  objects are filtered *after* the limit is applied. This means that fewer
  objects than the limit may be returned, and in extreme cases where many
  hidden, deleted, or lower version objects are found no objects may be
  returned.
  
ANTICIPATED FUTURE DEVELOPMENTS:
- Garbage collection
- ACLs based on KBase groups
- KBase Search API
- Improvements to returning the subset of an object

VERSION: 0.3.0 (Released 9/2/2014)
--------------------------------------
NEW FEATURES:
- The major change in this release is a major refactoring of the ID handling
  system. ID handling has been generalized to allow for custom ID handlers per
  ID type (e.g. the @id [ID_type] annotation).
- The workspace now supports the @id handle annotation, which allows for
  embedding HandleService handle IDs in workspace objects. When the object
  is retrieved from the workspace, the user retrieving the object is given
  read access to any data referenced by handles in the object.
- There is now a limit of 100,000 IDs in objects per save_objects call.
  IDs duplicated in the same object do not count towards this limit.
- Any IDs extracted from an object are returned in get_objects,
  get_referenced_objects, get_object_subset, and get_object_provenance.
- The source of a copied object, if visible to the user, is now exposed in the
  various get_objects* methods.
- New command line scripts added: ws-diff to compare (client side) two
  workspace objects and ws-typespec-download to automatically download
  registered typespecs and automatically resolve dependencies.
- Support added for the '@metadata ws' annotation to automatically extract
  ws metadata from the object data.  String/float/int fields in objects
  or subobjects can be selected in addition to the length of lists and
  mappings.
- Support for @range annotation to set limits (inclusive or exclusive)
  on int and float values.

UPDATED FEATURES / MAJOR BUG FIXES:
- Users with write permissions to a workspace can now view permissions for
  all users to that workspace.
- X-Forwarded-For and X-Real-IP headers are now taken into account when
  logging the IP of method calls. Set dont_trust_x_ip_headers=true in
  deploy.cfg to ignore them.
- Updated timestamp format in ws-list and ws-listobj to display readable
  local time by default instead of the ISO timestamp.
- get_object_subset no longer generates an error if a selected field
  or mapping key is not found, which provides better support for optional
  fields.  Errors are still generated if an array element does not exist.

KNOWN BUGS:
- When filtering list_object output, deleted, hidden and early versions of
  objects are filtered *after* the limit is applied. This means that fewer
  objects than the limit may be returned, and in extreme cases where many
  hidden, deleted, or lower version objects are found no objects may be
  returned.
  
ANTICIPATED FUTURE DEVELOPMENTS:
- Garbage collection
- ACLs based on KBase groups
- KBase Search API
- Service Search API (e.g. MongoDB queries on TOs)
- Object sharing 'inbox' (share specific versions of objects)
- Improvements to returning the subset of an object

VERSION: 0.2.1 (Released 7/11/14)
--------------------------------------
NEW FEATURES:
- get_object_provenance returns the object provenance without the data.
- added get_all_type_info and get_all_func_info to return all type/function
  information registered for a specified module
- a parsed structure of type and function defintions were added to TypeInfo
  and FuncInfo
- the owner of a module now can determine the released versions of a types and 
  and functions (released version info was added to TypeInfo and FuncInfo)
- Java client now has a method to deactivate SSL certification validation
  (primarily for use with self-signed certs)

UPDATED FEATURES / MAJOR BUG FIXES:
- the initialization script will no longer allow setting the mongo typedb
  name to the workspace type db name, and the server will refuse to start up
  if such is the case.
- configuration of the default URL for the CLI is handled properly; in 0.2.0
  the ws-url command needed to be called prior to other commands
- improved documentation and other minor error handling in the CLI
- again allows IRIS deployment of ws-workspace and ws-url
- fixed a bug that could cause date parsing errors on valid incoming
  date strings
- date strings now may contain 'Z' for the timezone
- kbase user is now configurable for deploy-upstart target
- there is now an option in deploy.cfg to specify the number of times to
  attempt to contact MongoDB on startup

KNOWN BUGS:
- When filtering list_object output, deleted, hidden and early versions of
  objects are filtered *after* the limit is applied. This means that fewer
  objects than the limit may be returned, and in extreme cases where many
  hidden, deleted, or lower version objects are found no objects may be
  returned.
  
ANTICIPATED FUTURE DEVELOPMENTS:
- Automatically populated metadata
- Range annotation support to set limits on float/int values
- Garbage collection
- Pointers to shock data too large to fit in the workspace
- ACLs based on KBase groups
- KBase Search API
- Service Search API (e.g. MongoDB queries on TOs)
- Object sharing queue (share specific versions of objects)
- Update copied objects from source
- Improvements to returning the subset of an object

VERSION: 0.2.0 (Released 5/18/14)
--------------------------------------
PREAMBLE:
v0.2.0 is a complete rewrite of the data path through the workspace, including
type checking, sorting, data extraction, and object retrieval, for the
purpose of controlling memory usage.

BACKWARDS INCOMPATIBLITIES:
- deploy.cfg has several new parameters, most of which have acceptable
  defaults. However temp-dir needs to be set before starting the new version.

NEW FEATURES:
- a new function, list_all_types, returns all the types in the workspace.
- ScriptHelpers workspace library ported to python (from perl) by Mike Mundy.

UPDATED FEATURES / MAJOR BUG FIXES:
- The max object size has been returned to 1GB.
- start_service no longer requires user-env.sh to be sourced.
- Nulls will now pass type checking where an int, float, or string is expected.
- Fixed a bug where get_object_subdata would return the same subdata if two
  different paths through the same object were specified.
- Command-line interface default URLs are configurable via the makefile.
- ws-workspace and ws-url now work against the User and Job State Service when
  in IRIS.
- The characters . and - are now allowed in workspace names.
- Parallel GC has been re-enabled.
- Updating a searchable ws or id annotation in a type definition now results
  in a major version increment instead of a minor version increment.
- Fixed a bug where get_referencing_objects would throw an error if an object
  has no references.

KNOWN BUGS:
- When filtering list_object output, deleted, hidden and early versions of
  objects are filtered *after* the limit is applied. This means that fewer
  objects than the limit may be returned, and in extreme cases where many
  hidden, deleted, or lower version objects are found no objects may be
  returned.

ANTICIPATED FUTURE DEVELOPMENTS:
- Automatically populated metadata
- Garbage collection
- Unified WS / Shock ACLs
- Pointers to shock data too large to fit in the workspace
- ACLs based on KBase groups
- KBase Search API
- Service Search API (e.g. MongoDB queries on TOs)
- Object sharing queue (share specific versions of objects)
- Import TOs from shock
- Update copied objects from source
- Improvements to returning the subset of an object

VERSION: 0.1.6 (Released 3/3/14)
--------------------------------------

NEW FEATURES:
- Get objects by reference, which allows retrieval of any objects that
  are referenced by objects to which the user has access.
- A new version of get_object_info, get_object_info_new, allows ignoring errors
  when listing object information. get_object_info is deprecated in favor of
  this method.
- Get the number of objects that reference an object via provenance or object-
  to-object references, including inaccessible objects.

UPDATED FEATURES / MAJOR BUG FIXES:
- Filter list_objects and list_workspace_info by date
- Optionally exclude globally readable objects from list_objects
- list_objects now takes skip and limit parameters and returns at most
  10000 objects. list_workspace_objects returns at most 10000 objects.
- A user can reduce their own permissions on any workspace.
- Workspace and object names can now be up to 255 characters in length.
- Workspace mod dates are now updated on a save/copy/revert/delete/rename
  of an object.
- Fixed a bug that caused object checksums to be calculated incorrectly. Note
  that any checksums calculated before this version are incorrect.
- Fixed a bug where trying to copy an object to an object with a version
  > than the maximum existing version would fail. The incoming copy target
  version number should be ignored.
- Fixed a bug where trying to copy an object to a deleted object would fail.
- Clarified some exceptions / error messages.

ANTICIPATED FUTURE DEVELOPMENTS:
- Rewrite type checker / data extractor for speed and memory usage
- Garbage collection
- Unified WS / Shock ACLs
- Pointers to shock data too large to fit in the workspace
- ACLs based on KBase groups
- KBase Search API
- Service Search API (e.g. MongoDB queries on TOs)
- Object sharing queue (share specific versions of objects)
- Import TOs from shock
- Update copied objects from source
- Improvements to returning the subset of an object

VERSION: 0.1.5 (Released 2/5/14)
--------------------------------------

Hotfix to use updated auth libs with 60d token lifetime.

VERSION: 0.1.4 (Released 1/30/14)
--------------------------------------

NEW FEATURES:
- Get the version of the workspace server.
- Set metadata on a workspace and search workspaces by metadata.

UPDATED FEATURES / MAJOR BUG FIXES:
- On startup the WSS attempts to create a node in shock to test for shock
  misconfiguration (shock client change)

ANTICIPATED FUTURE DEVELOPMENTS:
- Rewrite type checker / data extractor for speed and memory usage
- Garbage collection
- Unified WS / Shock ACLs
- Pointers to shock data too large to fit in the workspace
- Get objects by reference chain
- ACLs based on KBase groups
- KBase Search API
- Service Search API (e.g. MongoDB queries on TOs)
- Object sharing queue (share specific versions of objects)
- Import TOs from shock
- Update copied objects from source
- Improvements to returning the subset of an object

VERSION: 0.1.3 (Released 1/24/14)
--------------------------------------

UPDATED FEATURES / MAJOR BUG FIXES:
- Fixed a bug where get_module_info and get_type_info reported removed types.
- Scripts now allow IDs or object references to be used in place of object
  and workspace names.

VERSION: 0.1.2 (Released 1/23/14)
--------------------------------------

Hotfix release to disallow integer object and workspace names.

VERSION: 0.1.1 (Released 1/21/14)
--------------------------------------

BACKWARDS INCOMPATIBILITIES:
- The maximum object size is temporarily limited to 200MB.
- The maximum JSON string size received by the server is temporarily limited
  to 250MB.

NEW FEATURES:
- Add owners to modules so that multiple users can upload typespecs.
- Option to list only deleted objects or workspaces.
- Filter objects or workspaces list by permission level.
- Filter workspaces list by owner.
- Filter object list by the person who saved the object.
- Filter object list by user metadata.
- Return a list of objects that reference another object, either in the object
  data or the provenance data.

UPDATED FEATURES / MAJOR BUG FIXES:
- Module owners can now see unreleased modules and types.
- Turned off parallel garbage collection - was locking the server when
  processing large objects.
- Fixed bug in WS ID relabeling in values of mappings when keys contain forward
  slash character
- Retrieving subset of an object that includes an array element out of the
  array index range now generates an error instead of returning a subset with
  null values in the array
- First error encountered during type checking halts type checking, meaning
  that only the first error is shown to you even if multiple errors exist

ANTICIPATED FUTURE DEVELOPMENTS:
- Garbage collection
- Unified WS / Shock ACLs
- Pointers to shock data too large to fit in the workspace
- Get objects by reference chain
- ACLs based on KBase groups
- KBase Search API
- Service Search API (e.g. MongoDB queries on TOs)
- Object sharing queue (share specific versions of objects)
- Add searchable, mutable metadata to a workspace
- Import TOs from shock
- Update copied objects from source
- Improvements to returning the subset of an object

VERSION: 0.1.0 (Released 1/9/2014)
--------------------------------------
PREAMBLE:
0.1.0 is a complete rewrite of the workspace service and thus has many changes
to the API. A function change list is below.

NEW FEATURES:
- The WSS is configurable to save TOs in MongoDB/GridFS or Shock.
- Load, compile, and view KIDL typespecs.
- Objects are type checked against a KIDL typespec before saving.
- Save provenance information with an object.
- References to other workspace objects in a TO or TO provenance
	are confirmed accessible and type checked before saving.
- A list of references from a TO or TO provenance to other workspace objects is
	saved and retrievable.
- Hide objects. Hidden objects, by default, do not appear in the list_*
	methods.
- Lock a workspace, freezing it permanently. Locked, publicly readable
	workspaces are published.
- Workspaces and objects have a permanent autoincrementing ID as well as a
	mutable name. An object may be addressed by any combination of the
	workspace and object name or id plus a version number, or the KBase ID
	kb|ws.[workspace id].obj.[object id].ver.[object version].
- Workspaces may have a <1000 character description.
- Workspace names may be prefixed by the user's username and a colon. This
	provides a unique per user namespace for workspace names.
- Return only a user specified subset of an object.

UPDATED FEATURES / MAJOR BUG FIXES:
- Many methods now operate on multiple objects rather than one object per
	method call.
- list_objects can list objects from multiple workspaces at once.
- Rename an object or workspace.

ANTICIPATED FUTURE DEVELOPMENTS:
- Garbage collection
- Unified WS / Shock ACLs
- Pointers to shock data too large to fit in the workspace
- Get objects by reference chain
- ACLs based on KBase groups
- KBase Search API
- Service Search API (e.g. MongoDB queries on TOs)
- Object sharing queue (share specific versions of objects)
- Add mutable metadata to a workspace
- Filter list_workspace_info by metadata, owner, permissions
- Filter list_objects by metadata, owner, permissions
- Import TOs from shock
- Update copied objects from source
- Improvements to returning the subset of an object
- Find TOs that reference another TO

FUNCTION CHANGE LIST:

- Deprecated functions, and their replacement -
get_workspacemeta -> get_workspace_info
get_objectmeta -> get_object_info
save_object -> save_objects
get_object -> get_objects
list_workspaces -> list_workspace_info
list_workspace_objects -> list_objects

- Functions with an altered api. Please see the API documentation for details -
create_workspace
clone_workspace
get_objects
copy_object
revert_object
object_history -> get_object_history
set_global_workspace_permissions -> set_global_permission
set_workspace_permissions -> set_permissions
get_workspacepermissions -> get_permissions
delete_workspace -> delete_workspace and undelete_workspace
delete_object -> delete_objects and undelete_objects

- Removed functions -
move_object -> use rename_object or copy_object and delete_objects
has_object -> use get_object_info
delete_object_permanently
add_type -> various new functions below
get_types -> various new functions below
remove_type
load_media_from_bio
import_bio
import_map
queue_job -> AWE and / or the UserJobStateService
set_job_status -> AWE and / or the UserJobStateService
get_jobs -> AWE and / or the UserJobStateService
get_object_by_ref
save_object_by_ref
get_objectmeta_by_ref
get_user_settings -> UserJobStateService
set_user_settings -> UserJobStateService

- New functions -
get_object_subset
get_workspace_description
set_workspace_description
lock_workspace
rename_workspace
rename_object
hide_objects
unhide_objects
request_module_ownership
register_typespec
register_typespec_copy
release_module
list_modules
list_module_versions
get_module_info
get_jsonschema
translate_from_MD5_types
translate_to_MD5_types
get_type_info
get_func_info
administer

VERSION: 0.0.5 (Released 11/19/2013)
--------------------------------------
NEW FEATURES:
- Type compiler provided embedded authorization works
- Connect to mongodb databases requiring authorization
- Optionally exclude world readable workspaces from the output of
    list_workspaces()

UPDATED FEATURES / MAJOR BUG FIXES:
- Authentication is required for all writes, including workspace creation. The
    'public' user is now no different from any other user
- Workspace default permissions are now limited to none and read only
- A user must have at least read access to a workspace to get its metadata
- Only the user's own permission level is now returned by 
    get_workspacepermissions() if a user has read or write access to a workspace 
- Only the workspace's owner can change the owner's permissions
- Type names are now limited to ascii alphanumeric characters and _
- Object names are now limited to ascii alphanumeric characters and .|_-
- Object names must now be unique per workspace, even if the objects are
    different types
- Object and workspace names may not be integers
- Removed one of the two python clients in lib/, as it was not being updated on
    a make while the other was

ANTICIPATED FUTURE DEVELOPMENTS:
- Shock integration
- More rigorous handling of types using something like JSON schema
- Rework of object references, automatic reference verification
- Remove or alter many object deletion methods to prevent breaking references
- Data provenance
- Freeze and publish workspaces
- Workspaces namespaced by user
- Permissions for Globus groups
- Workspace descriptions

VERSION: 0.0.4 (Released 8/13/2013)
--------------------------------------
NEW FEATURES:
- Connect to mongodb databases requiring authorization
- get_objects() method

UPDATED FEATURES / MAJOR BUG FIXES:

ANTICIPATED FUTURE DEVELOPMENTS:
- Authentication will be required for all writes, including workspace creation. 
    The 'public' user will be no different from any other user
- Workspace default permissions will be limited to none and read only
- A user must have at least read access to a workspace to get its metadata
- Only the user's own permission level is returned by 
    get_workspacepermissions() if a user has read or write access to a workspace 
- Only the workspace's owner can change the owner's permissions
- Type names will be limited to ascii alphanumeric characters and _
- Object names will be limited to ascii alphanumeric characters and .|_-
- Object names will be unique per workspace, even if the objects are
    different types
- Type compiler provided embedded authorization
- Optionally exclude world readable workspaces from the output of
    list_workspaces()
- Shock integration
- More rigorous handling of types using something like JSON schema
- Rework of object references, automatic reference verification
- Remove or alter many object deletion methods to prevent breaking references
- Data provenance
- Freeze and publish workspaces
- Workspaces namespaced by user
- Permissions for Globus groups
- Workspace descriptions

VERSION: 0.0.3 (Released 1/1/2012)
------------------------------------------
NEW FEATURES:
-Added functions to manage the addition and removal of types.
-Added functions to handle job management to support running jobs on local clusters
-Added "instance" argument to "get_object" to enable users to access all object instances
-Created a complete set of command line scripts for interacting with workspace

UPDATED FEATURES / MAJOR BUG FIXES:
-Added ability to retrieve specific instances of objects
-Fixed bug in deletion of workspaces
-Fixed bug in object reversion
-Fixed bug in object retrieval
-Fixed bug in management of persistant state in workspace

ANTICIPATED FUTURE DEVELOPMENTS:
-More strict rigorous handling of types using something like JSON scheme

VERSION: 0.0.2 (Released 11/30/2012)
------------------------------------------
NEW FEATURES:
-This is the first public release of the Workspace Services.
-adjusted functions to accept arguments as a hash instead of an array
-added ability to provide authentication token in input arguments

UPDATED FEATURES / MAJOR BUG FIXES:
-none.

ANTICIPATED FUTURE DEVELOPMENTS:
-add "instance" argument to "get_object" to enable users to access all object instances
-add services to support management of types

VERSION: 0.0.1 (Released 10/12/2012)
------------------------------------------
NEW FEATURES:
-This is the first internal release of the Workspace Service, all methods are new.

UPDATED FEATURES / MAJOR BUG FIXES:
-none.

ANTICIPATED FUTURE DEVELOPMENTS:
-public release of the service
